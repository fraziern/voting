require('./style.scss');

const initJSON = {
  id: lil.uuid(),
  title: 'Question 1',
  choices: [{
    title: 'Choice 1',
    votes: 2
  },{
    title: 'Choice 2',
    votes: 1
  },{
    title: 'Choice 3',
    votes: 5
  }],
  owner: 'blerg'
};

class Choice extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    return (<li className="list-choice-item">
        <button type="button" className="btn btn-primary btn-block">{this.props.title}</button>
      </li>)
  }
}

class ChoiceList extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    return (
      <ul className="choice-list list-group list-unstyled">
        {this.props.data.choices.map(function(el) {
          return (<Choice key={el.title} title={el.title} />);
        })}
      </ul>
    );
  }
}

class ChoicePanel extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    return (
      <div className="choice-panel">
        <h2>{this.props.data.title}</h2>
        <h3>I'd like to vote for...</h3>
        <ChoiceList data={this.props.data} />
      </div>
    );
  }
}

ReactDOM.render( <ChoicePanel data={initJSON} />, document.getElementById('react-container'));


var width = 360;
var height = 360;
var radius = Math.min(width, height) / 2;

var color = d3.scale.category20b();

var svg = d3.select('#chart')
  .append('svg')
  .attr('width', width)
  .attr('height', height)
  .append('g')
  .attr('transform', 'translate(' + (width / 2) + ',' + (height / 2) + ')');

var arc = d3.svg.arc()
  .outerRadius(radius);

var pie = d3.layout.pie()
  .value(function(d) { return d.votes; })
  .sort(null);

var path = svg.selectAll('path')
  .data(pie(initJSON.choices))
  .enter()
  .append('path')
  .attr('d', arc)
  .attr('fill', function(d, i) {
    return color(d.data.title);
  });

var legend = d3.select("#legend")
  .append('ul')
  .attr('class', 'list-inline');

var keys = legend.selectAll('li.key')
  .data(color.domain());

keys.enter().append('li')
  .attr('class', 'key')
  .style('background', color)
  .text(function (d) {
    return d;
  });
